apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
      app.kubernetes.io/name: {{ .Values.deployment.name }}
spec:
  replicas: 1
  selector:
      matchLabels:
        app: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
    spec:
      volumes:
      - name: ramdisk
        hostPath:
          path: /run
          type: Directory
      {{- if eq .Values.persistence.pvcOrHostPath "pvc" }}
      - name: {{ .Values.persistence.pvc.name }}-pvc
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.pvc.name }}-pvc
      {{- end }} 
      {{- if eq .Values.persistence.pvcOrHostPath "hostPath" }}
      - name: {{ .Values.persistence.hostPath.name }}
        hostPath:
          path: {{ .Values.persistence.hostPath.path }}
      {{- end }} 
      - name: config
        configMap:
          name: configfiles
          items:
           - key: config.py
             path: config.py
      - name: clients
        configMap:
          name: configfiles
          items:
           - key: clients.conf
             path: clients.conf
      - name: webservercontent
        hostPath:
          path: {{ .Values.webserver.contentpath }}
      containers:
        - name: {{ .Values.deployment.name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: ramdisk
            mountPath: /run
          {{- if eq .Values.persistence.pvcOrHostPath "pvc" }}
          - name: {{ .Values.persistence.pvc.name }}-pvc
            mountPath: {{ .Values.container.backupMountpath }}
          {{- end }}  
          {{- if eq .Values.persistence.pvcOrHostPath "hostPath" }}
          - name: {{ .Values.persistence.hostPath.name }}
            mountPath: {{ .Values.persistence.hostPath.containerPath }} 
          {{- end }} 
          - name: config
            mountPath: /linux-monitor/config.py
            subPath: config.py
          - name: clients
            mountPath: /linux-monitor/clients.conf
            subPath: clients.conf
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx 
          image: nginx:stable-alpine
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.webserver.containerport }} 
          volumeMounts:
          - name: webservercontent 
            mountPath: /usr/share/nginx/html
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi


